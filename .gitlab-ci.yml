image: angulardeploy

stages:
  - codeStyle
  - test
  - build
  - deploy

cache:
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  paths:
    - .npm/

before_script:
  - cp $NPMRC_PULL ~/.npmrc
  - npm ci --cache .npm --prefer-offline --ignore-scripts

codeStyle:
  stage: codeStyle
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - ng lint
  only:
    - triggers
    - branches
    - tags

unitTests:
  stage: test
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - ng test --browsers ChromeHeadless --watch=false
  only:
    - triggers
    - branches
    - tags

buildExampleApp:
  stage: build
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - ng build --configuration=production
  only:
    - triggers
    - branches
    - tags
  artifacts:
    paths:
      - ./dist
    expire_in: 1 hour

buildLibary:
  stage: build
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - npm run build-lib
  only:
    - triggers
    - branches
    - tags
  artifacts:
    paths:
      - ./dist
    expire_in: 1 hour

editVersionAndDeploy:
  stage: deploy
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
    policy: pull
  script:
    - export GIT_SSH_COMMAND='ssh -i ~/.ssh/kyposervicekey'
    - ssh -o "StrictHostKeyChecking no" git@gitlab.ics.muni.cz && sleep 1
    - git clone $REPOSITORY_SSH_URL
    - cd $CI_PROJECT_NAME
    - git config --global user.name "$GIT_SERVICE_USER_NAME" && git config --global user.email "$GIT_SERVICE_USER_EMAIL"
    - 'npm run ci-update-version $VERSION'
    - git commit -am "Update project package.json version based on GitLab tag. Done by CI" && sleep 1
    - git push
    - sleep 5
    - cp $NPMRC_PULL ~/.npmrc
    - 'npm run ci-build-and-pack'
    - cp $NPMRC_PUSH ~/.npmrc
    - 'npm run ci-publish-package'
  only:
    - tags
